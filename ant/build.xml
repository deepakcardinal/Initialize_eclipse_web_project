<?xml version="1.0" encoding="UTF-8"?>
<project basedir="../." default="initialize" name="initialize-web">

<property file="${basedir}/ant/build.properties"/>
<property name="web.dir" value="${basedir}/web"/>

<taskdef resource="net/sf/antcontrib/antcontrib.properties">
  <classpath>
    <pathelement location="lib/ant-contrib.jar"/>
  </classpath>
</taskdef>

<target name="initialize">
    <mkdir dir="${project.location}/${project.name}/src"/>
    <mkdir dir="${project.location}/${project.name}/lib"/>
    <mkdir dir="${project.location}/${project.name}/target"/>
    <mkdir dir="${project.location}/${project.name}/build"/>
    <mkdir dir="${project.location}/${project.name}/web"/>
    <mkdir dir="${project.location}/${project.name}/web/js"/>
    <mkdir dir="${project.location}/${project.name}/web/css"/>
    <mkdir dir="${project.location}/${project.name}/web/images"/>
    <mkdir dir="${project.location}/${project.name}/web/WEB-INF"/>


   
<echo file="path/project.txt" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
		<name>${project.name}</name>
		<comment></comment>
		<projects>
		</projects>
		<buildSpec>
			<buildCommand>
				<name>org.eclipse.jdt.core.javabuilder</name>
				<arguments>
				</arguments>
			</buildCommand>
		</buildSpec>
		<natures>
			<nature>org.eclipse.jdt.core.javanature</nature>
		</natures>
</projectDescription>]]> 
</echo>
     
<echo file="${project.location}/${project.name}/build/build.properties" append="false"><![CDATA[appserver.name=${project.container.name}
appserver.deploy.dir=${appserver.deploy.dir}
appserver.root.dir=${appserver.root.dir}
]]></echo>
     
<echo file="${project.location}/${project.name}/build/build.xml" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<project basedir="../." default="mvn-init" name="${project.name}">

<property file="$${basedir}/build/build.properties"/>
<property name="war.name" value="$${ant.project.name}.war"/>
<property name="web.dir" value="$${basedir}/web"/>
<property name="classes.dir" value="$${basedir}/bin/classes"/>
<property name="dist.dir" value="$${basedir}/dist"/>

<taskdef resource="net/sf/antcontrib/antcontrib.properties">
  <classpath>
    <pathelement location="lib/ant-contrib.jar"/>
  </classpath>
</taskdef>

<path id="build.classpath">
		<fileset dir="${build-lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
</path>
	

<target name="mvn-init" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant">   
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
        classpath="lib/maven-ant-tasks-2.1.3.jar"/>
    <condition property="maven.repo.local" value="${maven.repo.local}" else="$${user.home}/.m2/repository">
        <isset property="maven.repo.local"/>
    </condition>          
    <echo>maven.repo.local=$${maven.repo.local}</echo>
    <artifact:localRepository id="local.repository" path="$${maven.repo.local}"/>
    <artifact:pom file="./build/pom.xml" id="maven.project"/>
    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
</target>

<target name="compile" depends="mvn-init">
    <mkdir dir="${classes.dir}"/>       
    <javac srcdir="src" destdir="${classes.dir}" classpathref="compile.classpath" includeantruntime="false"/>
    <copy todir="${classes.dir}">
        <fileset dir="src" excludes="**/*.java"/>
    </copy>        
</target>

<macrodef name="war-exploded">
    <attribute name="deployDir" default="target/${war.name}"/>
    <sequential>
        
        <copy todir="@{deployDir}/WEB-INF/classes">
            <fileset dir="${classes.dir}"/>
        </copy>
        <copy todir="@{deployDir}/WEB-INF/lib" flatten="true">
            <fileset refid="runtime.fileset"/>        
        </copy>
        
         <copy todir="@{deployDir}" flatten="false">
            <fileset dir="web"/>       
        </copy>
        
    </sequential>
</macrodef>   

<target name="war-exploded" depends="compile">
    <war-exploded/>       
</target>
 
<target name="war" depends="war-exploded">      
    <zip destfile="target/${war.name}.war" basedir="target/${war.name}"/>
</target>

<target name="Container_Name" description="Get Container Name from properties file and checks if container is tomcat or jboss">
    <condition property="container">
        <contains string="${appserver.name}" substring="tomcat">
		 </contains>
	</condition>
</target>
<target name="clean.appserver" depends="Container_Name" description="Delete deployment directories from appserver (as defined in build.properties) ">
    <echo>$${ant.version}</echo>
    <echo>$${appserver.name}</echo>
	    <if>
			 <equals arg1="${container}" arg2="true" />
			 <then>
			        <echo message="Containser is Tomcat" />
			        <delete dir="${appserver.deploy.dir}/${war.name}"/>  
                    <delete dir="${appserver.deploy.dir}/logs/"/>
                    <delete dir="${appserver.deploy.dir}/temp/"/>
                    <delete dir="${appserver.deploy.dir}/work/"/>
			 </then>
			 <else>
					<echo message="Container is JBOSS" />
					<delete dir="${appserver.deploy.dir}/${war.name}"/>
					<delete dir="${appserver.root.dir}/server/default/log/"/>
					<delete dir="${appserver.root.dir}/server/default/tmp/"/>
					<delete dir="${appserver.root.dir}/server/default/work/"/>
					<delete dir="${appserver.root.dir}/server/default/data/"/>
			 </else>
		</if> 	
</target>

<target name="deploy" depends="clean.appserver">      
    <zip destfile="target/${war.name}.war" basedir="target/${war.name}"/>
</target>

<target name="clean" description="Delete all compiled objects">
    
		<delete dir="${dist.dir}"/>
		<delete dir="${classes.dir}"/>
	</target>
</project>
]]> 
</echo>
	
<echo file="${project.location}/${project.name}/build/pom.xml" append="false"><![CDATA[<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>${project.base.package.name}</groupId>
  <artifactId>my-app</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Maven Quick Start Archetype</name>
  <url>http://maven.apache.org</url>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
  
  </dependencies>
</project>
]]>
</echo>
				
<echo file="path/classpath.txt" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<classpath>
          <classpathentry kind="src" path="src"/>
          <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
          <classpathentry kind="output" path="bin"/>
 </classpath>
     ]]>
</echo>

<echo file="${project.location}/${project.name}/web/WEB-INF/web.xml" append="false"><![CDATA[<web-app xmlns="http://java.sun.com/xml/ns/javaee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
 version="3.0">
</web-app>]]> 
</echo>
     
    <copy todir="${project.location}/${project.name}" file="path/classpath.txt">
	</copy>
	<copy todir="${project.location}/${project.name}" file="path/project.txt">
	</copy>
	
   
	<copy todir="${project.location}/${project.name}/lib">
            <fileset dir="lib"/>
    </copy>
	
     <copy todir="${project.location}/${project.name}/build">
			<fileset dir="ant/config" includes="**"/>
	 </copy>	
    <move file="${project.location}/${project.name}/project.txt" tofile="${project.location}/${project.name}/.project"/>
    <move file="${project.location}/${project.name}/classpath.txt" tofile="${project.location}/${project.name}/.classpath"/>
    
    

    <!-- 
   <attrib file="${project.location}/${project.name}/.classpath" readonly="true" hidden="true"/> 	   
   <attrib file="${project.location}/${project.name}/.project" readonly="true" hidden="true"/>
    --> 	   
</target>




</project>